cd ../../environmental_bayesian_modeling/data/burke/data/input/
set matsize 800
use GrowthClimateDataset_train, clear
gen temp = udel_temp_popweight

// Standard Regression

reg growthwdi c.temp##c.temp udel_precip_popweight udel_precip_popweight_2 i.year _yi_* _y2_* i.encoded_iso_id
// reg growthwdi c.temp##c.temp udel_precip_popweight udel_precip_popweight_2 i.year _yi_* _y2_* _y3_* i.encoded_iso_id

est save burke_stata_regression_withheld

// export covariance matrix

esttab mat(V) using burke_regression_covariance_matrix.csv, replace mlab(none)

// use delta method on test data

clear all

// matrix table = r(table)
// 95% confidence t-score
// scalar tcrit = table[8,1]
use GrowthClimateDataset_test
gen temp = udel_temp_popweight

est use burke_stata_regression_withheld

predict yhat
predict stdp, stdp
generate lower = yhat - 1.9603795*stdp
generate upper = yhat + 1.9603795*stdp

export delimited burke_stdp_pred_outsample_withheld

// get vertex bounds with delta method

est use burke_stata_regression

matrix b = e(b)
mat V=e(V)

local coef1 = b[1,1]
local coef2 = b[1,2]
local coef1_sq = `coef1'*`coef1'
local coef2_sq = `coef2'*`coef2'
local coef_mult = `coef1'*`coef2'
local coef_div = `coef1'/`coef2'

local t_t2_cov = V[1,2]
local coef1_var = V[1,1]
local coef2_var = V[2,2]

local vertex_variance = .25 * (`coef_div' * `coef_div') * ((`coef1_var'/`coef1_sq') + (`coef2_var'/`coef2_sq')-(2*(`t_t2_cov'/`coef_mult')))

local vertex = `coef1' / (-2 * `coef2')
local lower = `vertex' - (1.645 * sqrt(`vertex_variance'))
local upper = `vertex' + (1.645 * sqrt(`vertex_variance'))

display `vertex'
display `lower'
display `upper'

// individual parameter means and variance

display b[1,1]
display b[1,2]
display b[1,3]
display b[1,4]

display V[1,1]
display V[2,2]
display V[3,3]
display V[4,4]

// Bootstrap
bootstrap, reps(1500) seed(1) saving("bootstrap/burke_bootstrap_replications"): reg growthwdi c.temp##c.temp udel_precip_popweight udel_precip_popweight_2 i.year _yi_* _y2_* i.encoded_iso_id
// Block Bootstrap
bootstrap, reps(1500) seed(1) cluster(block) idcluster(block_id) saving("bootstrap/burke_bootstrap_replications_block"): reg growthwdi c.temp##c.temp udel_precip_popweight udel_precip_popweight_2 i.year _yi_* _y2_* i.encoded_iso_id

est save bootstrap/burke_bootstrap_block_withheld

clear

// view bootstrap regression results
est use bootstrap/burke_bootstrap_robust
est replay

use GrowthClimateDataset_test
gen temp = udel_temp_popweight
predict yhat
predict stdp, stdp
generate lower = yhat - 1.9603795*stdp
generate upper = yhat + 1.9603795*stdp
export delimited bootstrap/burke_bootstrap_stdp_robust

// save coefficients from all bootstrap replicationsas CSV with variable labels
clear all
use bootstrap/burke_bootstrap_replications_block_withheld
export excel temp.xlsx, firstrow(varlabels)
import excel temp.xlsx
export delimited bootstrap/burke_stata_bootstrap_block_withheld

// Burke Bootstrap

forvalues nn = 1/1200 {
use GrowthClimateDataset_train, clear
bsample, cl(iso_id)
qui gen Udel_temp_popweight_2 = udel_temp_popweight^2
	qui reg growthwdi udel_temp_popweight udel_temp_popweight_2 udel_precip_popweight udel_precip_popweight_2 i.year _yi_* _y2_* i.encoded_iso_id 
esttab, wide, using bootstrap/replications/replication_`nn'.csv
di "`nn'"
}